> ##  Medvedev Andrey
> ##  Geometric distribution, p = 0.677
> ##  1. Model distribution
> print("Modeling Geom(0.677) distribution.. ")
"Modeling Geom(0.677) distribution.. "
> 
> n <- 10000
> p <- 0.677
> x <- rgeom(n, prob=p) + 1
> 
> library(ggplot2)
> data <- data.frame(index = seq(0, n-1),
+                    value = x[0:n])
> ggplot(data, aes(x=value)) + 
+   geom_histogram(binwidth=1, colour="black", fill="white")
> ggsave("histogram.png")
Saving 5.48 x 3.82 in image
> 
> print(".. distribution has been modeled")
".. distribution has been modeled"
> 
> ##  2. Calculate characteristics
> print("Calculating characteristics.. ")
"Calculating characteristics.. "
> 
> xMean <- mean(x)
> xBiasedVar <- mean((x - xMean)^2)
> xUnbaisedVar <- n * xBiasedVar / (n - 1)
> xSigma <- sd(x)
> xSem <- xSigma / sqrt(n)
> xMedian <- median(x)
> xMax <- max(x)
> xMin <- min(x)
> xQuantiles <- quantile(x)
> xIqr <- IQR(x)
> xMoment3 <- mean((x - xMean)^3)
> xGamma1 <- xMoment3 / xSigma^3
> xM4 <- mean((x - xMean)^4)
> xGamma2 <- xM4 / xSigma^4
> 
> print(paste0("Mean: ", xMean))
"Mean: 1.4684"
> print(paste0("Biased variance: ", xBiasedVar))
"Biased variance: 0.69580144"
> print(paste0("Unbiased variance: ", xUnbaisedVar))
"Unbiased variance: 0.69587102710271"
> print(paste0("Standard deviation: ", xSigma))
"Standard deviation: 0.834188843789409"
> print(paste0("Mean error: ", xSem))
"Mean error: 0.00834188843789409"
> print(paste0("Median: ", xMedian))
"Median: 1"
> print(paste0("Max: ", xMax))
"Max: 9"
> print(paste0("Min: ", xMin))
"Min: 1"
> print(paste0("Interquartile range: ", xIqr))
"Interquartile range: 1"
> print(paste0("Third central moment: ", xMoment3))
"Third central moment: 1.403893531008"
> print(paste0("Forth central moment: ", xM4))
"Forth central moment: 5.37758234828178"
> print(paste0("Skewness: ", xGamma1))
"Skewness: 2.41847187153504"
> print(paste0("Kurtosis: ", xGamma2))
"Kurtosis: 11.1052811998825"
> print(".. characteristics calculated")
".. characteristics calculated"
> 
> ##  3. Estimate parameters
> print("Estimating parameters.. ")
"Estimating parameters.. "
> 
> pEstimatedMM <- 1 / xMean
> pEstimatedML <- 1 / xMean
> 
> print(paste0(".. estimated using moments method: ", pEstimatedMM))
".. estimated using moments method: 0.681013347861618"
> print(paste0(".. estimated using max likelyhood method: ", pEstimatedML))
".. estimated using max likelyhood method: 0.681013347861618"
> print(".. estimated parameters")
".. estimated parameters"
> 
> ##  4. Pearson's chi square test
> print("Processing Pearson's chi square test..")
"Processing Pearson's chi square test.."
> 
> xCountPerValue <- vector()
> for (i in xMin:(xMax+1))
+ {
+   temp <- x[x == i]
+   xCountPerValue <- c(xCountPerValue, length(temp))
+ }
> 
> xFromEstimated <- pgeom(seq((xMin-2), (xMax-1)), prob=pEstimatedMM)
> xFromEstimated = c(xFromEstimated, 1)
> estimated = xFromEstimated[2:(xMax+2)] - xFromEstimated[1:(xMax+1)]
> estimated = n * estimated
> diffSquared = (xCountPerValue - estimated) ^ 2
> chiSquare = sum(diffSquared / estimated)
> print(paste0(".. chi square test processed: ", chiSquare))
".. chi square test processed: 8.91434519475333"
> 
> ##  5. Shapiro-Wilk's test
> print("Processing Shapiro-Wilk's test..")
"Processing Shapiro-Wilk's test.."
> print(".. normal distribution")
".. normal distribution"
> 
> n <- 1000
> mean <- 0
> standardDeviation <- 1
> print(paste0(".. mean: ", mean))
".. mean: 0"
> print(paste0(".. standard deviation: ", standardDeviation))
".. standard deviation: 1"
> 
> x <- rnorm(n, mean, standardDeviation)
> shapiroTestResult <- shapiro.test(x)
> print(shapiroTestResult)

	Shapiro-Wilk normality test

data:  x
W = 0.99866, p-value = 0.6585

> 
> print(".. Shapiro-Wilk's test processed")
".. Shapiro-Wilk's test processed"